datadog-operator:
  apiKeyExistingSecret: datadog-secret
  appKeyExistingSecret: datadog-secret
  site: app.datadoghq.com
  datadogCRDs:
    crds:
      # datadogCRDs.crds.datadogAgents -- Set to true to deploy the DatadogAgents CRD
      datadogAgents: true
      # datadogCRDs.crds.datadogMetrics -- Set to true to deploy the DatadogMetrics CRD
      datadogMetrics: true
      # datadogCRDs.crds.datadogPodAutoscalers -- Set to true to deploy the DatadogPodAutoscalers CRD
      datadogPodAutoscalers: true
      # datadogCRDs.crds.datadogMonitors -- Set to true to deploy the DatadogMonitors CRD
      datadogMonitors: true
      # datadogCRDs.crds.datadogSLOs -- Set to true to deploy the DatadogSLO CRD
      datadogSLOs: false
      # datadogCRDs.crds.datadogDashboards -- Set to true to deploy the DatadogDashboard CRD
      datadogDashboards: true
      # datadogCRDs.crds.datadogGenericResources -- Set to true to deploy the DatadogGenericResource CRD
      datadogGenericResources: false
  datadogDashboard:
    # datadogDashboard.enabled -- Enables the Datadog Dashboard controller
    enabled: true
  datadogMonitor:
    # datadogMonitor.enabled -- Enables the Datadog Monitor controller
    enabled: true

datadog:
  datadog:
    agents:
      tolerations:
        - operator: "Exists"
    otlp:
      receiver:
        protocols:
          grpc:
            enabled: true
            endpoint: "0.0.0.0:4317"
            useHostPort: true
          http:
            enabled: false
      otelCollector:
        enabled: false
    apiKeyExistingSecret: datadog-secret
    appKeyExistingSecret: datadog-secret
    site: app.datadoghq.com
    logs:
      enabled: true
      containerCollectAll: true
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
    tolerations:
      - operator: "Exists"
