gocd:
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::786584124104:role/xquare-deployer-git-oidc-role
  rbac:
    create: true
    apiVersion: v1
    extraRules:
      - apiGroups: [ "" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "apps", "extensions" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "batch" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "autoscaling" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "policy" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "rbac.authorization.k8s.io" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "storage.k8s.io" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "secrets.hashicorp.com" ]
        resources: [ "vaultauths", "vaultdynamicsecrets" ]
        verbs: [ "*" ]
      - apiGroups: [ "networking.istio.io" ]
        resources: [ "virtualservices" ]
        verbs: [ "*" ]
      - apiGroups: [ "autoscaling.k8s.io" ]
        resources: [ "verticalpodautoscalers" ]
        verbs: [ "*" ]
  server:
    tolerations:
      - effect: "NoSchedule"
        key: xquare/platform
        operator: "Equal"
        value: "true"

    persistence:
      enabled: true
      extraVolumes:
        - name: auth-config
          emptyDir: {}
        - name: cruise-config
          emptyDir: {}

      extraVolumeMounts:
        - name: auth-config
          mountPath: /godata/config/password
        - name: cruise-config
          mountPath: /godata/config

    initContainers:
      - name: install-xmlstarlet
        image: "alpine:latest"
        securityContext:
          runAsUser: 0
        command: [ "sh", "-c" ]
        args:
          - |
            # Install xmlstarlet
            apk add --no-cache xmlstarlet
        volumeMounts:
          - name: cruise-config
            mountPath: /godata/config
      - name: create-password-file
        image: "busybox:latest"
        command: ["sh", "-c"]
        args:
          - |
            if [ ! -f /godata/config/password/passwd ]; then
              echo 'teamxquare:$2y$05$aRLoH6R/gy9Hiw0RW9c.redlwI2zwVun8.7bjWIdvarxFQJI/OBYC' > /godata/config/password/passwd
            fi
        volumeMounts:
          - name: auth-config
            mountPath: /godata/config/password

    postStart:
      - "sh"
      - "-c"
      - |
        xmlstarlet ed \
          -s "/cruise" -t elem -n "security" -v "" \
          -s "/cruise/security" -t elem -n "authConfigs" -v "" \
          -s "/cruise/security/authConfigs" -t elem -n "authConfig" -v "" \
          -i "/cruise/security/authConfigs/authConfig" -t attr -n "id" -v "pw" \
          -i "/cruise/security/authConfigs/authConfig" -t attr -n "pluginId" -v "cd.go.authentication.passwordfile" \
          -s "/cruise/security/authConfigs/authConfig" -t elem -n "property" -v "" \
          -s "/cruise/security/authConfigs/authConfig/property" -t elem -n "key" -v "PasswordFilePath" \
          -s "/cruise/security/authConfigs/authConfig/property" -t elem -n "value" -v "/godata/config/password/passwd" \
          /godata/config/cruise-config.xml > cruise-config.tmp && mv cruise-config.xml.tmp cruise-config.xml

  ingress:
      enabled: false
  service:
    type: "ClusterIP"
  env:
    extraEnvVars:
      - name: GOCD_PLUGIN_INSTALL_gocd-yaml-config-plugin
        value: https://github.com/tomzo/gocd-yaml-config-plugin/releases/download/v1.0.0-364/yaml-config-plugin-1.0.0-364.jar
  resources:
    requests:
      memory: 1024Mi