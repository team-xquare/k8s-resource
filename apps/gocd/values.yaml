gocd:
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::786584124104:role/xquare-deployer-git-oidc-role
  rbac:
    create: true
    apiVersion: v1
    extraRules:
      - apiGroups: [ "" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "apps", "extensions" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "batch" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "autoscaling" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "policy" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "rbac.authorization.k8s.io" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "storage.k8s.io" ]
        resources: [ "*" ]
        verbs: [ "*" ]
      - apiGroups: [ "secrets.hashicorp.com" ]
        resources: [ "vaultauths", "vaultdynamicsecrets" ]
        verbs: [ "*" ]
      - apiGroups: [ "networking.istio.io" ]
        resources: [ "virtualservices" ]
        verbs: [ "*" ]
      - apiGroups: [ "autoscaling.k8s.io" ]
        resources: [ "verticalpodautoscalers" ]
        verbs: [ "*" ]
  server:
    securityContext:
      runAsUser: 0
    tolerations:
      - effect: "NoSchedule"
        key: xquare/platform
        operator: "Equal"
        value: "true"
    persistence:
      enabled: true
      extraVolumes:
        - name: auth-config
          emptyDir: {}
      extraVolumeMounts:
        - name: auth-config
          mountPath: /godata/config/password
    initContainers:
      - name: create-cruise-config
        image: "busybox:latest"
        command: ["sh", "-c"]
        args:
          - |
            pwd
            
            cat /godata/config/cruise-config.xml
            # Create the cruise-config.xml file with the desired content
            echo '<?xml version="1.0" encoding="utf-8"?>' > /godata/config/cruise-config.xml
            echo '<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="139">' >> /godata/config/cruise-config.xml
            echo '  <server agentAutoRegisterKey="500087f0-3877-4333-82a4-bbf5050d0b58" webhookSecret="286a3886-589c-4d77-97a5-6ccf29d96ab3" serverId="803fa1e7-a998-4c4c-b9d2-734895555b97" tokenGenerationKey="a0699a6e-4f92-49bc-98a8-6a575f7466c0">' >> /godata/config/cruise-config.xml
            echo '    <artifacts>' >> /godata/config/cruise-config.xml
            echo '      <artifactsDir>artifacts</artifactsDir>' >> /godata/config/cruise-config.xml
            echo '    </artifacts>' >> /godata/config/cruise-config.xml
            echo '  </server>' >> /godata/config/cruise-config.xml
            echo '  <security>' >> /godata/config/cruise-config.xml
            echo '    <authConfigs>' >> /godata/config/cruise-config.xml
            echo '      <authConfig id="pw" pluginId="cd.go.authentication.passwordfile">' >> /godata/config/cruise-config.xml
            echo '        <property>' >> /godata/config/cruise-config.xml
            echo '          <key>PasswordFilePath</key>' >> /godata/config/cruise-config.xml
            echo '          <value>/godata/config/password/passwd</value>' >> /godata/config/cruise-config.xml
            echo '        </property>' >> /godata/config/cruise-config.xml
            echo '      </authConfig>' >> /godata/config/cruise-config.xml
            echo '    </authConfigs>' >> /godata/config/cruise-config.xml
            echo '  </security>' >> /godata/config/cruise-config.xml
            echo '</cruise>' >> /godata/config/cruise-config.xml
        volumeMounts:
          - name: auth-config
            mountPath: /godata/config/password
    ingress:
      enabled: false
  service:
    type: "ClusterIP"
  env:
    extraEnvVars:
      - name: GOCD_PLUGIN_INSTALL_gocd-yaml-config-plugin
        value: https://github.com/tomzo/gocd-yaml-config-plugin/releases/download/v1.0.0-364/yaml-config-plugin-1.0.0-364.jar
  resources:
    requests:
      memory: 1024Mi
