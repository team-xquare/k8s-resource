psmdb-db:
  replsets:
    rs0:
      size: 3
      expose:
        enabled: true
      tolerations:
        - effect: "NoSchedule"
          key: xquare/database
          operator: "Equal"
          value: "true"
      resources:
        requests:
          cpu: "60m"
          memory: "500Mi"
        limits:
          cpu: "150m"
          memory: "700Mi"
      volumeSpec:
        pvc:
          resources:
            requests:
              storage: 55Gi
  sharding:
    configrs:
      resources:
        requests:
          cpu: "80m"
      tolerations:
        - effect: "NoSchedule"
          key: xquare/database
          operator: "Equal"
          value: "true"
    mongos:
      size: 1
      tolerations:
        - effect: "NoSchedule"
          key: xquare/database
          operator: "Equal"
          value: "true"
      expose:
        enabled: true
        exposeType: LoadBalancer
      resources:
        rqeuests:
          cpu: "300m"
          memory: "80Mi"

  users:
    - name: admin
      db: admin
      passwordSecretRef:
        name: mongo-admin
        key: password
      roles:
        - name: root
          db: admin
    - name: dsm-repo
      db: dsm-repo
      passwordSecretRef:
        name: dsm-repo
        key: password
      roles:
        - name: dbOwner
          db: dsm-repo
  backup:
    enabled: false
    tasks:
     - name: daily-s3-us-west
       enabled: true
       schedule: "0 0 * * *"
       keep: 3
       storageName: s3-us-west
       compressionType: gzip
     - name: weekly-s3-us-west
       enabled: false
       schedule: "0 0 * * 0"
       keep: 5
       storageName: s3-us-west
       compressionType: gzip
     - name: weekly-s3-us-west-physical
       enabled: false
       schedule: "0 5 * * 0"
       keep: 5
       type: physical
       storageName: s3-us-west
       compressionType: gzip
       compressionLevel: 6
    # annotations:
    #   iam.amazonaws.com/role: role-arn
    # podSecurityContext: {}
    # containerSecurityContext: {}
    # resources:
    #   limits:
    #     cpu: "300m"
    #     memory: "1.2G"
    #   requests:
    #     cpu: "300m"
    #     memory: "1G"
    storages:
     s3-us-west:
       type: s3
       s3:
         bucket: S3-BACKUP-BUCKET-NAME-HERE
         credentialsSecret: my-cluster-name-backup-s3
         serverSideEncryption:
           kmsKeyID: 1234abcd-12ab-34cd-56ef-1234567890ab
           sseAlgorithm: aws:kms
           sseCustomerAlgorithm: AES256
           sseCustomerKey: Y3VzdG9tZXIta2V5
         retryer:
           numMaxRetries: 3
           minRetryDelay: 30ms
           maxRetryDelay: 5m
         region: us-west-2
         prefix: ""
         uploadPartSize: 10485760
         maxUploadParts: 10000
         storageClass: STANDARD
         insecureSkipTLSVerify: false
    # minio:
    #   type: s3
    #   s3:
    #     bucket: MINIO-BACKUP-BUCKET-NAME-HERE
    #     region: us-east-1
    #     credentialsSecret: my-cluster-name-backup-minio
    #     endpointUrl: http://minio.psmdb.svc.cluster.local:9000/minio/
    #     prefix: ""
    #   azure-blob:
    #     type: azure
    #     azure:
    #       container: CONTAINER-NAME
    #       prefix: PREFIX-NAME
    #       endpointUrl: https://accountName.blob.core.windows.net
    #       credentialsSecret: SECRET-NAME
    #  backup-nfs:
    #    type: filesystem
    #    filesystem:
    #      path: /mnt/nfs/
  #    volumeMounts:
  #    - mountPath: /mnt/nfs/
  #      name: backup-nfs

prometheus-mongodb-exporter:
  existingSecret:
    name: "mongodb-secret"
    key: "mongodb-uri"
  serviceMonitor:
    enabled: true
    additionalLabels:
      prometheus: prometheus-stack
  extraArgs:
    - --collector.diagnosticdata
    - --discovering-mode
    - --compatible-mode
    - --collect-all
    - --collector.collstats-limit=0
    - --log.level=debug
