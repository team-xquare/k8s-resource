kube-prometheus-stack:
  crds:
    enabled: true # 첫 설치시 true로 해야함
  nodeExporter:
    enabled: false
  prometheusOperator:
    enabled: true
    resources:
      requests:
        cpu: 10m
        memory: 16Mi
    admissionWebhooks:
      patch:
        tolerations:
          - effect: "NoSchedule"
            key: "xquare/platform"
            operator: "Equal"
            value: "true"
    tolerations:
      - effect: "NoSchedule"
        key: "xquare/platform"
        operator: "Equal"
        value: "true"
  kubeStateMetrics:
    enabled: true
    resources:
      requests:
        cpu: 10m
        memory: 16Mi
    tolerations:
      - effect: "NoSchedule"
        key: "xquare/platform"
        operator: "Equal"
        value: "true"
  prometheus: 
    serviceAccount:
      create: true
      name: "xquare-prometheus-stack"
      automountServiceAccountToken: true
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::786584124104:role/thanos_s3_role 
    additionalRulesForClusterRole:
    - apiGroups:
        - ""
      resources:
        - nodes
        - nodes/proxy
        - nodes/metrics
        - services
        - endpoints
        - pods
        - ingresses
        - configmaps
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - "extensions"
        - "networking.k8s.io"
      resources:
        - ingresses/status
        - ingresses
      verbs:
        - get
        - list
        - watch
    - nonResourceURLs:
        - "/metrics"
      verbs:
        - get
    thanosService:
      enabled: true
      port: 10901
      portName: grpc
      targetPort: grpc
      type: ClusterIP
    prometheusSpec:
      serviceMonitorSelector:
        matchLabels:
          prometheus: prometheus-stack
      resources:
        requests:
          cpu: 1024m
          memory: 8192Mi
      tolerations:
        - effect: "NoSchedule"
          key: xquare/platform
          operator: "Equal"
          value: "true"
      thanos:
        minTime: -3h
        objectStorageConfig:
          existingSecret:
            key: objstore.yml
            name: thanos-objstore-secret
        version: v0.18.0
      additionalScrapeConfigs:
      - job_name: 'opencost-exorter'
        static_configs:
          - targets: [ 'opencost-prometheus-opencost-exporter.opencost.svc.cluster.local:9003' ]
      - job_name: 'mongodb-exporter'
        static_configs:
          - targets: [ 'percona-operator-prometheus-mongodb-exporter.percona.svc.cluster.local:9216' ]
      - job_name: 'opentelemetry-collector'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [ __meta_kubernetes_pod_label_app_kubernetes_io_name ]
            action: keep
            regex: opentelemetry-collector
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [ __meta_kubernetes_namespace ]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [ __meta_kubernetes_pod_name ]
            action: replace
            target_label: kubernetes_pod_name
        metric_relabel_configs:
          - action: labelmap
            regex: ^container_(.+)$
            replacement: $1
          - source_labels: [ __name__ ]
            action: replace
            target_label: __name__
            regex: ^container_(.*_seconds_total)$
            replacement: $1
      ## actuator
      - job_name: 'spring-actuator'
        metrics_path: '/actuator/prometheus' # Application prometheus endpoint
        static_configs:
          - targets: ["${SERVICE_URL}:8080"] # Application host:port
      ## istio
      - job_name: 'istiod'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
        - source_labels: [ __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name ]
          action: keep
          regex: istiod;http-monitoring
      - job_name: 'istio-mesh'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
        - source_labels: [ __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name ]
          action: keep
          regex: istio-telemetry;prometheus
      - job_name: 'istio-policy'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - istio-system
        relabel_configs:
        - source_labels: [ __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name ]
          action: keep
          regex: istio-policy;http-policy-monitoring
      - job_name: 'istio-telemetry'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - istio-system
        relabel_configs:
        - source_labels: [ __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name ]
          action: keep
          regex: istio-telemetry;http-monitoring
      - job_name: 'envoy-stats'
        metrics_path: /stats/prometheus
        kubernetes_sd_configs:
          - role: pod
        # relabel_config 설정 https://grafana.com/docs/grafana-cloud/metrics-control-usage/control-prometheus-metrics-usage/usage-reduction/?src=grafana&mdm=rss
        relabel_configs:
        - source_labels: [ __meta_kubernetes_pod_container_port_name ]
          action: keep # 일치하는 대상 유지, 나머지 삭제
          regex: '.*-envoy-prom'
        - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
          action: replace # 일치하는 label 을 replacement에 지정된 새 label 로 변경
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:15090
          target_label: __address__
        - action: labeldrop
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [ __meta_kubernetes_namespace ]
          action: replace
          target_label: namespace
        - source_labels: [ __meta_kubernetes_pod_name ]
          action: replace
          target_label: pod_name
      - job_name: 'galley'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - istio-system
        relabel_configs:
        - source_labels: [ __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name ]
          action: keep
          regex: istio-galley;http-monitoring
      - job_name: 'sidecar-injector'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - default
            - istio-system
            - traefik
        relabel_configs:
        - source_labels: [ __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name ]
          action: keep
          regex: istio-sidecar-injector;http-monitoring

      ## pod
      - honor_labels: true
        job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape
          - action: drop
            regex: true
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
          - action: replace
            regex: (https?)
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme
            target_label: __scheme__
          - action: replace
            regex: (.+)
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
            replacement: '[$2]:$1'
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_port
              - __meta_kubernetes_pod_ip
            target_label: __address__
          - action: replace
            regex: (\d+);((([0-9]+?)(\.|$)){4})
            replacement: $2:$1
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_port
              - __meta_kubernetes_pod_ip
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: pod
          - action: drop
            regex: Pending|Succeeded|Failed|Completed
            source_labels:
              - __meta_kubernetes_pod_phase
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: 'kubernetes-nodes-cadvisor'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - replacement: kubernetes.default.svc:443
            target_label: __address__
          - regex: (.+)
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
            source_labels:
              - __meta_kubernetes_node_name
            target_label: __metrics_path__
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
      - job_name: 'kubernetes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      ## prometheus
      - job_name: 'prometheus'
        static_configs:
          - targets:
              - localhost:9090
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - action: keep
            regex: default;kubernetes;https
            source_labels:
              - __meta_kubernetes_namespace
              - __meta_kubernetes_service_name
              - __meta_kubernetes_endpoint_port_name
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - replacement: kubernetes.default.svc:443
            target_label: __address__
          - regex: (.+)
            replacement: /api/v1/nodes/$1/proxy/metrics
            source_labels:
              - __meta_kubernetes_node_name
            target_label: __metrics_path__
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
      - honor_labels: true
        job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape
          - action: drop
            regex: true
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
          - action: replace
            regex: (https?)
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
            target_label: __scheme__
          - action: replace
            regex: (.+)
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: (.+?)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_service_name
            target_label: service
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: node
      - honor_labels: true
        job_name: 'prometheus-pushgateway'
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - action: keep
            regex: pushgateway
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_probe
      - honor_labels: true
        job_name: 'kubernetes-services'
        kubernetes_sd_configs:
          - role: service
        metrics_path: /probe
        params:
          module:
            - http_2xx
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_probe
          - source_labels:
              - __address__
            target_label: __param_target
          - replacement: blackbox
            target_label: __address__
          - source_labels:
              - __param_target
            target_label: instance
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            target_label: service
  alertmanager:
    enabled: true
    alertmanagerSpec:
      useExistingSecret: true
      configSecret: "prom-alertmanager-config-secret"
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
      tolerations:
        - effect: "NoSchedule"
          key: xquare/platform
          operator: "Equal"
          value: "true"
  thanosRuler:
    enabled: true
    thanosRulerSpec:
      alertmanagersConfig:
        existingSecret:
          key: alertmanager-configs.yaml
          name: thanosruler-alertmanager-config
      objectStorageConfig:
        existingSecret:
          key: objstore.yml
          name: thanos-objstore-secret
      volumes:
        - name: object-storage
          secret:
            secretName: thanos-objstore-secret
      queryEndpoints:
      - http://thanos-query.monitoring.svc.cluster.local:9090
      resources:
        requests:
          cpu: 32m
          memory: 128Mi
      tolerations:
        - effect: "NoSchedule"
          key: xquare/platform
          operator: "Equal"
          value: "true"
    extraSecret:
      name: thanosruler-alertmanager-config
      data:
        alertmanager-configs.yaml: |
          alertmanagers:
          - static_configs: ["kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093"]
            scheme: http
            timeout: 30s
            api_version: v1

  grafana:
    enabled: true
    assertNoLeakedSecrets: false
    resources:
      requests:
        cpu: 10m
        memory: 256Mi
    tolerations:
      - effect: "NoSchedule"
        key: "xquare/platform"
        operator: "Equal"
        value: "true"
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: 'default'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
    sidecar:
      dashboards: 
        enabled: true
        folderAnnotation: grafana_folder
        reloadURL: "http://kube-prometheus-stack-grafana.monitoring/api/admin/provisioning/dashboards/reload"
        provider:
          foldersFromFilesStructure: true
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          url: http://kube-prometheus-stack-prometheus.monitoring:9090
          editable: false
          access: proxy
          isDefault: false
        - name: Alertmanager
          type: alertmanager
          url: http://kube-prometheus-stack-alertmanager.monitoring:9093
          editable: false
          access: proxy
          isDefault: false
        - name: Loki
          type: loki
          access: proxy
          editable: false
          url: http://loki-gateway.monitoring:80
          isDefault: false
    grafana.ini:
      log:
        filters: oauth.generic_oauth:debug
      server:
        domain: grafana.xquare.app
        root_url: https://grafana.xquare.app
        enforce_domain: false
        enable_gzip: true
      auth:
        oauth_auto_login: true
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        auto_login: true
        scopes: openid, email, profile, offline_access, groups
        auth_url: https://dex.xquare.app/auth
        token_url: https://dex.xquare.app/token
        api_url: https://dex.xquare.app/userinfo
        client_id: grafana
        client_secret: wnZOOiLE6rwwDK2
        email_attribute_path: email
      auth.generic_oauth.group_mapping:
        role_attribute_path: contains(groups[*], 'team-xquare:DevOps') && 'Admin'
        org_id: 1
        team_ids_attribute_path: groups[*].split(':')[0]
        teams_url: https://dex.xquare.app/userinfo
      security:
        cookie_secure: true
        cookie_samesite: lax